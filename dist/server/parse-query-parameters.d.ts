import { Request, Response } from 'express';
import { ZodEffects, ZodObject, ZodTypeAny } from 'zod';
declare const parseQueryParameters: <Shape extends Record<string, ZodTypeAny>, Schema extends ZodObject<Shape, import("zod").UnknownKeysParam, ZodTypeAny, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }> | ZodEffects<ZodObject<Shape, import("zod").UnknownKeysParam, ZodTypeAny, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }> | ZodEffects<ZodEffects<ZodObject<Shape, import("zod").UnknownKeysParam, ZodTypeAny, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }> | ZodEffects<ZodEffects<ZodEffects<ZodObject<Shape, import("zod").UnknownKeysParam, ZodTypeAny, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }> | ZodEffects<ZodEffects<ZodEffects<ZodEffects<ZodObject<Shape, import("zod").UnknownKeysParam, ZodTypeAny, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }> | ZodEffects<ZodEffects<ZodEffects<ZodEffects<ZodEffects<ZodObject<Shape, import("zod").UnknownKeysParam, ZodTypeAny, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, { [k_1 in keyof import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>]: import("zod").objectUtil.addQuestionMarks<import("zod").baseObjectOutputType<Shape>, { [k in keyof import("zod").baseObjectOutputType<Shape>]: undefined extends import("zod").baseObjectOutputType<Shape>[k] ? never : k; }[keyof Shape]>[k_1]; }, { [k_2 in keyof import("zod").baseObjectInputType<Shape>]: import("zod").baseObjectInputType<Shape>[k_2]; }>, ValidParams extends ReturnType<Schema["parse"]>>(request: Request, res: Response, schema: Schema) => ValidParams | null;
export default parseQueryParameters;
